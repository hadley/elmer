% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/types.R
\name{Type}
\alias{Type}
\alias{TypeBasic}
\alias{TypeEnum}
\alias{TypeArray}
\alias{TypeObject}
\title{Type definitions for function calling and structured data extraction.}
\usage{
TypeBasic(description = NULL, required = TRUE, type = character(0))

TypeEnum(description = NULL, required = TRUE, values = character(0))

TypeArray(description = NULL, required = TRUE, items = Type())

TypeObject(
  description = NULL,
  required = TRUE,
  properties = list(),
  additional_properties = TRUE
)
}
\arguments{
\item{description}{The purpose of the component. This is
used by the LLM to determine what values to pass to the tool or what
values to extract in the structured data, so the more detail that you can
provide here, the better.}

\item{required}{Is the component required? If \code{FALSE}, and the
component does not exist in the data, the LLM may hallucinate a value.
Only applies when the element is nested inside of a \code{type_object()}.}

\item{type}{Basic type name. Must be one of \code{boolean}, \code{integer},
\code{number}, or \code{string}.}

\item{values}{Character vector of permitted values.}

\item{items}{The type of the array items. Can be created by any of the
\code{type_} function.}

\item{properties}{Named list of properties stored inside the object.
Each element should be an S7 \code{Type} object.`}

\item{additional_properties}{Can the object have arbitrary additional
properties that are not explicitly listed? Only supported by Claude.}
}
\description{
These S7 classes are provided for use by package devlopers who are
extending elmer. In every day use, use \code{\link[=type_boolean]{type_boolean()}} and friends.
}
