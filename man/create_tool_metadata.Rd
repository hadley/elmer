% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tools.R
\name{create_tool_metadata}
\alias{create_tool_metadata}
\title{Create metadata for a tool}
\usage{
create_tool_metadata(topic, model = "gpt-4o", echo = interactive())
}
\arguments{
\item{topic}{A symbol or string literal naming the function to create
metadata for. Can also be an expression of the form \code{pkg::fun}.}

\item{model}{The OpenAI model to use for generating the metadata. Defaults to
"gpt-4o", which is highly recommended over "gpt-4o-mini".}

\item{echo}{Emit the registration code to the console. Defaults to \code{TRUE} in
interactive sessions.}
}
\value{
A \code{register_tool} call that you can copy and paste into your code.
Returned invisibly if \code{echo} is \code{TRUE}.
}
\description{
In order to use a function as a tool in a chat, you need to
craft the right metadata to pass to \code{register_tool()}. This function helps
you do that for documented package functions by extracting the function's R
documentation and creating a \code{register_tool} call for you, using an LLM. It's
meant to be used interactively while writing your code, not as part of your
final code.

Note that this function is inherently imperfect. It can't handle all possible
R functions, because not all parameters are suitable for use in a tool call
(for example, because they're not serializable to simple JSON objects). The
documentation might not specify the expected shape of arguments to the level
of detail that would allow an exact JSON schema to be generated.
}
